--- clang/lib/StaticAnalyzer/Core/Z3ConstraintManager.cpp.orig	2018-06-06 13:29:57.070228300 +0300
+++ clang/lib/StaticAnalyzer/Core/Z3ConstraintManager.cpp	2018-06-06 13:31:19.912344400 +0300
@@ -679,13 +679,13 @@
       // type, which isn't compatible with a unsigned long type, even if they
       // are the same size.
       Z3_get_numeral_uint64(Z3Context::ZC, AST,
-                            reinterpret_cast<__uint64 *>(&Value[0]));
+                            &Value[0]);
       if (Sort.getBitvectorSortSize() <= 64) {
         Int = llvm::APSInt(llvm::APInt(Int.getBitWidth(), Value[0]), true);
       } else if (Sort.getBitvectorSortSize() == 128) {
         Z3Expr ASTHigh = Z3Expr(Z3_mk_extract(Z3Context::ZC, 127, 64, AST));
         Z3_get_numeral_uint64(Z3Context::ZC, AST,
-                              reinterpret_cast<__uint64 *>(&Value[1]));
+                              &Value[1]);
         Int = llvm::APSInt(llvm::APInt(Int.getBitWidth(), Value), true);
       } else {
         assert(false && "Bitwidth not supported!");
