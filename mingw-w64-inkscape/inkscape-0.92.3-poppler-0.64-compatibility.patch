--- inkscape-0.92.3/src/extension/internal/pdfinput/pdf-parser.cpp.orig	2018-03-11 23:38:09.000000000 +0300
+++ inkscape-0.92.3/src/extension/internal/pdfinput/pdf-parser.cpp	2018-04-24 14:14:59.576013800 +0300
@@ -2490,7 +2490,7 @@
     builder->updateFont(state);
     fontChanged = gFalse;
   }
-  doShowText(args[0].getString());
+  doShowText(args[0].getString()->copy());
 }
 
 // TODO not good that numArgs is ignored but args[] is used:
@@ -2511,7 +2511,7 @@
   ty = state->getLineY() - state->getLeading();
   state->textMoveTo(tx, ty);
   builder->updateTextPosition(tx, ty);
-  doShowText(args[0].getString());
+  doShowText(args[0].getString()->copy());
 }
 
 // TODO not good that numArgs is ignored but args[] is used:
@@ -2534,7 +2534,7 @@
   ty = state->getLineY() - state->getLeading();
   state->textMoveTo(tx, ty);
   builder->updateTextPosition(tx, ty);
-  doShowText(args[2].getString());
+  doShowText(args[2].getString()->copy());
 }
 
 // TODO not good that numArgs is ignored but args[] is used:
@@ -2572,7 +2572,7 @@
       }
       builder->updateTextShift(state, obj.getNum());
     } else if (obj.isString()) {
-      doShowText(obj.getString());
+      doShowText(obj.getString()->copy());
     } else {
       error(errSyntaxError, getPos(), "Element of show/space array must be number or string");
     }
@@ -2732,7 +2732,7 @@
 {
   Object obj1, obj2, obj3, refObj;
 
-  char *name = args[0].getName();
+  const char *name = args[0].getName();
 #if defined(POPPLER_NEW_OBJECT_API)
   if ((obj1 = res->lookupXObject(name)).isNull()) {
 #else
--- inkscape-0.92.3/src/extension/internal/pdfinput/svg-builder.cpp.orig	2018-04-24 13:54:53.312932900 +0300
+++ inkscape-0.92.3/src/extension/internal/pdfinput/svg-builder.cpp	2018-04-24 14:13:17.239834100 +0300
@@ -1020,7 +1020,7 @@
     GfxFont *font = state->getFont();
     // Store original name
     if (font->getName()) {
-        _font_specification = font->getName()->getCString();
+        _font_specification = font->getName()->copy()->getCString();
     } else {
         _font_specification = (char*) "Arial";
     }
